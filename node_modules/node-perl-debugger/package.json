{
  "name": "node-perl-debugger",
  "version": "0.0.4",
  "description": "An interface to allow Node programs to debug Perl scripts",
  "author": {
    "name": "Kieran Simpson",
    "email": "kierans777@gmail.com"
  },
  "license": "Apache License 2.0",
  "main": "index.js",
  "bugs": {
    "url": "https://bitbucket.org/kierans777/node-perl-debugger/issues"
  },
  "repository": {
    "type": "hg",
    "url": "https://bitbucket.org/kierans777/node-perl-debugger"
  },
  "scripts": {
    "test": "grunt test"
  },
  "keywords": [
    "perl"
  ],
  "dependencies": {
    "merge": "^1.2.0",
    "q": "^1.4.1"
  },
  "devDependencies": {
    "chai": "^3.0.0",
    "clone": "^1.0.2",
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.11.2",
    "grunt-jsdoc": "^0.6.7",
    "grunt-simple-mocha": "^0.4.0",
    "jshint-stylish": "^2.0.1",
    "load-grunt-tasks": "^3.2.0",
    "mocha": "^2.2.5",
    "mocha-should": "git+https://github.com/kierans/mocha-should.git#RELEASE_0_0_1",
    "resumer": "0.0.0"
  },
  "readme": "# node-perl-debugger\n\nAn interface to allow Node programs to debug Perl scripts.\n\nThis module uses the Perl debugger's remote capabilities to debug a Perl program.\n\n# Caveats\n\nThis has only been tested on perl 5.16.3  If the debugger changes the way data is printed between Perl versions,\nthis module may not work correctly.\n\n# Usage\n\n    $ npm install\n    \nTo run the tests:\n\n    $ grunt\n    \nTo generate the API doc:\n\n    $ grunt doc\n    \n## Starting a Debugger Host\n\nAn example of how to use the module is in the `test/perl` folder.\n \nTo start a host for the Perl debugger to connect to, use the `DebuggerHost` class.  Once a host is `listening` a Perl\nprocess can be connected using the `PERLDB_OPTS` env variable eg:\n\n    $ pwd\n    ~/node-perl-debugger/test/perl\n    \n    $ PERLDB_OPTS=RemotePort=localhost:12345 perl -d test.pl\n    \n## Using the commands interface\n\nThe `DebuggerCommands` class can be used to issue commands to the debugger.  It uses an instance of `DebuggerParser` to\nunderstand output from the debugger.\n\nClients should wait for the `ready` event before issuing commands.\n\nThe commands utilise [Javascript](http://www.html5rocks.com/en/tutorials/es6/promises/) [Promises](https://github.com/kriskowal/q)\nto coordinate the sending, and receiving of data with the debugger.  While clients can listen for events emitted after\ncommands have been issued, in practise any event emitted will also be processed in order to settle a Promise returned\nfrom a command function.\n\nFor example, the `break` event is used to resolve the Promise returned from the `continue()` function since the\nPerl programming is continuing it's execution until a breakpoint is hit (assuming one has been set).\n\nSee the API docs, and the example test Perl program to see the commands in action.\n\n# Example\n\nThis example is used to debug the test Perl program in the `test/perl` program\n\n```javascript\n\"use strict\";\n\nvar DebuggerHost = require(\"node-perl-debugger\").DebuggerHost;\n\nvar debug = new DebuggerHost({\n  log: process.stdout,\n  port: 12345\n});\n\ndebug.on(\"disconnection\", function() {\n  debug.close();\n});\n\ndebug.on(\"close\", function() {\n  console.log(\"Finished\");\n});\n\ndebug.listen();\n\nvar commands = debug.commands();\n\ncommands.on(\"ready\", function() {\n  commands.break(\"Calculator.pm\", 10)\n      .then(function() {\n        return commands.break(\"test.pl\", 45);\n      })\n      .then(function() {\n        return commands.continue();\n      })\n      .then(function() {\n        return commands.stacktrace();\n      })\n      .then(log)\n      .then(function() {\n        return commands.continue();\n      })\n      .then(function() {\n        return commands.variables();\n      })\n      .then(log)\n      .then(function() {\n        return commands.quit();\n      })\n      .catch(console.error);\n});\n\nfunction log(json) {\n  console.log(JSON.stringify(json, null, 2));\n}\n```\n",
  "readmeFilename": "README.md",
  "_id": "node-perl-debugger@0.0.4",
  "dist": {
    "shasum": "1ac3e6a1774980ba54a10b1b2f2e7c965745d95d"
  },
  "_from": "node-perl-debugger@",
  "_resolved": "https://registry.npmjs.org/node-perl-debugger/-/node-perl-debugger-0.0.4.tgz"
}
